language: node_js
node_js:
  - "0.8"
  - "0.10"
  - "0.12"
  - "1.8"
  - "2.5"
  - "3.3"
  - "4.9"
  - "5.12"
  - "6.17"
  - "7.10"
  - "8.17"
  - "9.11"
  - "10.21"
  - "11.15"
  - "12.18"
  - "13.14"
  - "14.7"
cache:
  directories:
    - node_modules
before_install:
  # Configure npm
  - |
    # Skip updating shrinkwrap / lock
    npm config set shrinkwrap false
  # Remove all non-test dependencies
  - |
    # Remove benchmark dependencies
    npm rm --silent --save-dev benchmark beautify-benchmark
  # Setup Node.js version-specific dependencies
  - |
    # mocha for testing
    # - use 2.x for Node.js < 0.10
    # - use 3.x for Node.js < 4
    # - use 5.x for Node.js < 6
    # - use 6.x for Node.js < 8
    # - use 7.x for Node.js < 10
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm install --save-dev mocha@2.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 4 ]]; then
      npm install --save-dev mocha@3.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      npm install --save-dev mocha@5.2.0
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 8 ]]; then
      npm install --save-dev mocha@6.2.2
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm install --save-dev mocha@7.2.0
    fi
  - |
    # browserify for browser testing
    # - install for Node.js > 0.8
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -gt 0 || "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -gt 8 ]]; then
      npm install --silent --save-dev browserify@15
    fi
  - |
    # nyc for coverage
    # - remove for Node.js < 0.10
    # - use 10.x for Node.js < 4
    # - use 11.x for Node.js < 6
    # - use 14.x for Node.js < 8
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm rm --save-dev nyc
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 4 ]]; then
      npm install --save-dev nyc@10.3.2
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      npm install --save-dev nyc@11.9.0
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 8 ]]; then
      npm install --save-dev nyc@14.1.1
    fi
  - |
    # eslint for linting
    # - remove on Node.js < 8
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 8 ]]; then
      node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
        grep -E '^eslint(-|$)' | \
        sort -r | \
        xargs -n1 npm rm --silent --save-dev
    fi
  # Update Node.js modules
  - |
    # Prune and rebuild node_modules
    if [[ -d node_modules ]]; then
      npm prune
      npm rebuild
    fi
script:
  # Run test script
  - |
    if npm -ps ls nyc | grep -q nyc; then
      npm run test-ci
    else
      npm test
    fi
  # Run linting
  - |
    if npm -ps ls eslint | grep -q eslint; then
      npm run lint
    fi
after_script:
  - |
    # Upload coverage to coveralls
    if [[ -d .nyc_output ]]; then
      npm install --save-dev coveralls@2.10.0
      nyc report --reporter=text-lcov | coveralls
    fi
